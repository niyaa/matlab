function [loc, glob, weights, DFinv] = quad_nodes(p1, p2, p3, q)
  p21 = p2 - p1; p31 = p3 - p1;
  area = abs(0.5*(p21(1)*p31(2) - p21(2)*p31(1)));
  switch (q)
   case {0, 1}
    loc = [1/3; 1/3];
    weights = area;
   case 2
    loc = [1/6 4/6 1/6; 1/6 1/6 4/6];
    weights = [area/3 area/3 area/3];
   otherwise
    loc = [0.101286507323456 0.797426985353087 0.101286507323456 ...
	   0.470142064105115 0.059715871789770 0.470142064105115 ... 
	   0.333333333333333; ...
	   0.101286507323456 0.101286507323456 0.797426985353087 ...
	   0.470142064105115 0.470142064105115 0.059715871789770 ...
	   0.333333333333333];
    weights = [0.0629695902724136 0.0629695902724136 0.0629695902724136 ...
	       0.0661970763942531 0.0661970763942531 0.0661970763942531 ...
	       0.1125]*area*2;
  end
  glob = zeros(size(loc));
  for k = 1:length(weights)
    glob(:,k) = p1 + loc(1,k)*p21 + loc(2,k)*p31;
  end
  DFinv = (inv([p21 p31]))';
   
   